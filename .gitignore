# BINARY LOGISTIC REGRESSION MODEL
data=read.csv()
data

# Building binary logistic regression model
model<-glm(y~x,data=data,family=binomial())
summary(model)

# scoring(obtaining predicted probability)
scores<-predict(model,data,type="response")
scored<-cbind(data,scores)

#sensitivity and specificity for varying cut values
#creating space for storing sensitivity and specificity
cutpoints<-seq(0,1,0.01)
length(cutpoints)
sensitivity<-seq(1,101,1)	
specificity<-seq(1,101,1)
cutpoint_performance<-cbind(cutpoints,sensitivity,specificity)
table(scored$y)

for(i in 1:101)
{
scored$predicted<-ifelse(scored$scores<cutpoint_performance[i,1],0,1)
scored$sumed<-simon_scored$predicted+simon_scored$y
scored$pred_1<-ifelse(scored$sumed==2,1,0)
correct_1<-sum(scored$pred_1)
scored$pred_0<-ifelse(scored$sumed==0,1,0)
correct_0<-sum(scored$pred_0)
cutpoint_performance[i,2]<-correct_1/11
cutpoint_performance[i,3]<-correct_0/21
}
Cutvalue_table<-table(scored$y,scored$predicted)
Cutvalue_table
cutvalue_table<-data.frame(cutpoint_performance)
cutvalue_table$diff<-abs(cutvalue_table$sensitivity-cutvalue_table$specificity)

# tabulation for creating gains chart
sorted<-scored[order(-scored$scores),]
sorted$row_id<-seq(1,32,1)
sorted$grp<-trunc((sorted$row_id/32)*10)+1
sorted$group<-ifelse(sorted$grp==11,10,sorted$grp)
gains_chart<-table(sorted$group,sorted$Coupen)
cum_events<-cumsum(gains_chart[,2])
gains_chart<-cbind(gains_chart,cum_events)
cum_prob_events<-cum_events/11
gain_chart<-cbind(gains_chart,cum_prob_events)


